// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LogAddCollateral extends ethereum.Event {
  get params(): LogAddCollateral__Params {
    return new LogAddCollateral__Params(this);
  }
}

export class LogAddCollateral__Params {
  _event: LogAddCollateral;

  constructor(event: LogAddCollateral) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _usr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogAdjustPosition extends ethereum.Event {
  get params(): LogAdjustPosition__Params {
    return new LogAdjustPosition__Params(this);
  }
}

export class LogAdjustPosition__Params {
  _event: LogAdjustPosition;

  constructor(event: LogAdjustPosition) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateralPoolId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _positionAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _lockedCollateral(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _addCollateral(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _addDebtShare(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LogCage extends ethereum.Event {
  get params(): LogCage__Params {
    return new LogCage__Params(this);
  }
}

export class LogCage__Params {
  _event: LogCage;

  constructor(event: LogCage) {
    this._event = event;
  }
}

export class LogMoveCollateral extends ethereum.Event {
  get params(): LogMoveCollateral__Params {
    return new LogMoveCollateral__Params(this);
  }
}

export class LogMoveCollateral__Params {
  _event: LogMoveCollateral;

  constructor(event: LogMoveCollateral) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateralPoolId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _src(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _dst(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LogSetAccessControlConfig extends ethereum.Event {
  get params(): LogSetAccessControlConfig__Params {
    return new LogSetAccessControlConfig__Params(this);
  }
}

export class LogSetAccessControlConfig__Params {
  _event: LogSetAccessControlConfig;

  constructor(event: LogSetAccessControlConfig) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _accessControlConfig(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogSetCollateralPoolConfig extends ethereum.Event {
  get params(): LogSetCollateralPoolConfig__Params {
    return new LogSetCollateralPoolConfig__Params(this);
  }
}

export class LogSetCollateralPoolConfig__Params {
  _event: LogSetCollateralPoolConfig;

  constructor(event: LogSetCollateralPoolConfig) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateralPoolConfig(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogSetTotalDebtCeiling extends ethereum.Event {
  get params(): LogSetTotalDebtCeiling__Params {
    return new LogSetTotalDebtCeiling__Params(this);
  }
}

export class LogSetTotalDebtCeiling__Params {
  _event: LogSetTotalDebtCeiling;

  constructor(event: LogSetTotalDebtCeiling) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _totalDebtCeiling(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogUncage extends ethereum.Event {
  get params(): LogUncage__Params {
    return new LogUncage__Params(this);
  }
}

export class LogUncage__Params {
  _event: LogUncage;

  constructor(event: LogUncage) {
    this._event = event;
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BookKeeper__positionsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getLockedCollateral(): BigInt {
    return this.value0;
  }

  getDebtShare(): BigInt {
    return this.value1;
  }
}

export class BookKeeper extends ethereum.SmartContract {
  static bind(address: Address): BookKeeper {
    return new BookKeeper("BookKeeper", address);
  }

  accessControlConfig(): Address {
    let result = super.call(
      "accessControlConfig",
      "accessControlConfig():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_accessControlConfig(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessControlConfig",
      "accessControlConfig():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateralPoolConfig(): Address {
    let result = super.call(
      "collateralPoolConfig",
      "collateralPoolConfig():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_collateralPoolConfig(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collateralPoolConfig",
      "collateralPoolConfig():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateralToken(param0: Bytes, param1: Address): BigInt {
    let result = super.call(
      "collateralToken",
      "collateralToken(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_collateralToken(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "collateralToken",
      "collateralToken(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  live(): BigInt {
    let result = super.call("live", "live():(uint256)", []);

    return result[0].toBigInt();
  }

  try_live(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("live", "live():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  positionWhitelist(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "positionWhitelist",
      "positionWhitelist(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_positionWhitelist(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "positionWhitelist",
      "positionWhitelist(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  positions(param0: Bytes, param1: Address): BookKeeper__positionsResult {
    let result = super.call(
      "positions",
      "positions(bytes32,address):(uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return new BookKeeper__positionsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_positions(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<BookKeeper__positionsResult> {
    let result = super.tryCall(
      "positions",
      "positions(bytes32,address):(uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BookKeeper__positionsResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  stablecoin(param0: Address): BigInt {
    let result = super.call("stablecoin", "stablecoin(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_stablecoin(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("stablecoin", "stablecoin(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  systemBadDebt(param0: Address): BigInt {
    let result = super.call(
      "systemBadDebt",
      "systemBadDebt(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_systemBadDebt(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "systemBadDebt",
      "systemBadDebt(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDebtCeiling(): BigInt {
    let result = super.call(
      "totalDebtCeiling",
      "totalDebtCeiling():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalDebtCeiling(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalDebtCeiling",
      "totalDebtCeiling():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalStablecoinIssued(): BigInt {
    let result = super.call(
      "totalStablecoinIssued",
      "totalStablecoinIssued():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalStablecoinIssued(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalStablecoinIssued",
      "totalStablecoinIssued():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalUnbackedStablecoin(): BigInt {
    let result = super.call(
      "totalUnbackedStablecoin",
      "totalUnbackedStablecoin():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalUnbackedStablecoin(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalUnbackedStablecoin",
      "totalUnbackedStablecoin():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AccrueStabilityFeeCall extends ethereum.Call {
  get inputs(): AccrueStabilityFeeCall__Inputs {
    return new AccrueStabilityFeeCall__Inputs(this);
  }

  get outputs(): AccrueStabilityFeeCall__Outputs {
    return new AccrueStabilityFeeCall__Outputs(this);
  }
}

export class AccrueStabilityFeeCall__Inputs {
  _call: AccrueStabilityFeeCall;

  constructor(call: AccrueStabilityFeeCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _stabilityFeeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _debtAccumulatedRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AccrueStabilityFeeCall__Outputs {
  _call: AccrueStabilityFeeCall;

  constructor(call: AccrueStabilityFeeCall) {
    this._call = call;
  }
}

export class AddCollateralCall extends ethereum.Call {
  get inputs(): AddCollateralCall__Inputs {
    return new AddCollateralCall__Inputs(this);
  }

  get outputs(): AddCollateralCall__Outputs {
    return new AddCollateralCall__Outputs(this);
  }
}

export class AddCollateralCall__Inputs {
  _call: AddCollateralCall;

  constructor(call: AddCollateralCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _usr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddCollateralCall__Outputs {
  _call: AddCollateralCall;

  constructor(call: AddCollateralCall) {
    this._call = call;
  }
}

export class AdjustPositionCall extends ethereum.Call {
  get inputs(): AdjustPositionCall__Inputs {
    return new AdjustPositionCall__Inputs(this);
  }

  get outputs(): AdjustPositionCall__Outputs {
    return new AdjustPositionCall__Outputs(this);
  }
}

export class AdjustPositionCall__Inputs {
  _call: AdjustPositionCall;

  constructor(call: AdjustPositionCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _positionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _collateralOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _stablecoinOwner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _collateralValue(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class AdjustPositionCall__Outputs {
  _call: AdjustPositionCall;

  constructor(call: AdjustPositionCall) {
    this._call = call;
  }
}

export class BlacklistCall extends ethereum.Call {
  get inputs(): BlacklistCall__Inputs {
    return new BlacklistCall__Inputs(this);
  }

  get outputs(): BlacklistCall__Outputs {
    return new BlacklistCall__Outputs(this);
  }
}

export class BlacklistCall__Inputs {
  _call: BlacklistCall;

  constructor(call: BlacklistCall) {
    this._call = call;
  }

  get toBeBlacklistedAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BlacklistCall__Outputs {
  _call: BlacklistCall;

  constructor(call: BlacklistCall) {
    this._call = call;
  }
}

export class CageCall extends ethereum.Call {
  get inputs(): CageCall__Inputs {
    return new CageCall__Inputs(this);
  }

  get outputs(): CageCall__Outputs {
    return new CageCall__Outputs(this);
  }
}

export class CageCall__Inputs {
  _call: CageCall;

  constructor(call: CageCall) {
    this._call = call;
  }
}

export class CageCall__Outputs {
  _call: CageCall;

  constructor(call: CageCall) {
    this._call = call;
  }
}

export class ConfiscatePositionCall extends ethereum.Call {
  get inputs(): ConfiscatePositionCall__Inputs {
    return new ConfiscatePositionCall__Inputs(this);
  }

  get outputs(): ConfiscatePositionCall__Outputs {
    return new ConfiscatePositionCall__Outputs(this);
  }
}

export class ConfiscatePositionCall__Inputs {
  _call: ConfiscatePositionCall;

  constructor(call: ConfiscatePositionCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _positionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _collateralCreditor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _stablecoinDebtor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _collateralAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConfiscatePositionCall__Outputs {
  _call: ConfiscatePositionCall;

  constructor(call: ConfiscatePositionCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _collateralPoolConfig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _accessControlConfig(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintUnbackedStablecoinCall extends ethereum.Call {
  get inputs(): MintUnbackedStablecoinCall__Inputs {
    return new MintUnbackedStablecoinCall__Inputs(this);
  }

  get outputs(): MintUnbackedStablecoinCall__Outputs {
    return new MintUnbackedStablecoinCall__Outputs(this);
  }
}

export class MintUnbackedStablecoinCall__Inputs {
  _call: MintUnbackedStablecoinCall;

  constructor(call: MintUnbackedStablecoinCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MintUnbackedStablecoinCall__Outputs {
  _call: MintUnbackedStablecoinCall;

  constructor(call: MintUnbackedStablecoinCall) {
    this._call = call;
  }
}

export class MoveCollateralCall extends ethereum.Call {
  get inputs(): MoveCollateralCall__Inputs {
    return new MoveCollateralCall__Inputs(this);
  }

  get outputs(): MoveCollateralCall__Outputs {
    return new MoveCollateralCall__Outputs(this);
  }
}

export class MoveCollateralCall__Inputs {
  _call: MoveCollateralCall;

  constructor(call: MoveCollateralCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _src(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dst(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class MoveCollateralCall__Outputs {
  _call: MoveCollateralCall;

  constructor(call: MoveCollateralCall) {
    this._call = call;
  }
}

export class MovePositionCall extends ethereum.Call {
  get inputs(): MovePositionCall__Inputs {
    return new MovePositionCall__Inputs(this);
  }

  get outputs(): MovePositionCall__Outputs {
    return new MovePositionCall__Outputs(this);
  }
}

export class MovePositionCall__Inputs {
  _call: MovePositionCall;

  constructor(call: MovePositionCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _src(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dst(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _collateralAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class MovePositionCall__Outputs {
  _call: MovePositionCall;

  constructor(call: MovePositionCall) {
    this._call = call;
  }
}

export class MoveStablecoinCall extends ethereum.Call {
  get inputs(): MoveStablecoinCall__Inputs {
    return new MoveStablecoinCall__Inputs(this);
  }

  get outputs(): MoveStablecoinCall__Outputs {
    return new MoveStablecoinCall__Outputs(this);
  }
}

export class MoveStablecoinCall__Inputs {
  _call: MoveStablecoinCall;

  constructor(call: MoveStablecoinCall) {
    this._call = call;
  }

  get _src(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dst(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MoveStablecoinCall__Outputs {
  _call: MoveStablecoinCall;

  constructor(call: MoveStablecoinCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class SetAccessControlConfigCall extends ethereum.Call {
  get inputs(): SetAccessControlConfigCall__Inputs {
    return new SetAccessControlConfigCall__Inputs(this);
  }

  get outputs(): SetAccessControlConfigCall__Outputs {
    return new SetAccessControlConfigCall__Outputs(this);
  }
}

export class SetAccessControlConfigCall__Inputs {
  _call: SetAccessControlConfigCall;

  constructor(call: SetAccessControlConfigCall) {
    this._call = call;
  }

  get _accessControlConfig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAccessControlConfigCall__Outputs {
  _call: SetAccessControlConfigCall;

  constructor(call: SetAccessControlConfigCall) {
    this._call = call;
  }
}

export class SetCollateralPoolConfigCall extends ethereum.Call {
  get inputs(): SetCollateralPoolConfigCall__Inputs {
    return new SetCollateralPoolConfigCall__Inputs(this);
  }

  get outputs(): SetCollateralPoolConfigCall__Outputs {
    return new SetCollateralPoolConfigCall__Outputs(this);
  }
}

export class SetCollateralPoolConfigCall__Inputs {
  _call: SetCollateralPoolConfigCall;

  constructor(call: SetCollateralPoolConfigCall) {
    this._call = call;
  }

  get _collateralPoolConfig(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCollateralPoolConfigCall__Outputs {
  _call: SetCollateralPoolConfigCall;

  constructor(call: SetCollateralPoolConfigCall) {
    this._call = call;
  }
}

export class SetTotalDebtCeilingCall extends ethereum.Call {
  get inputs(): SetTotalDebtCeilingCall__Inputs {
    return new SetTotalDebtCeilingCall__Inputs(this);
  }

  get outputs(): SetTotalDebtCeilingCall__Outputs {
    return new SetTotalDebtCeilingCall__Outputs(this);
  }
}

export class SetTotalDebtCeilingCall__Inputs {
  _call: SetTotalDebtCeilingCall;

  constructor(call: SetTotalDebtCeilingCall) {
    this._call = call;
  }

  get _totalDebtCeiling(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalDebtCeilingCall__Outputs {
  _call: SetTotalDebtCeilingCall;

  constructor(call: SetTotalDebtCeilingCall) {
    this._call = call;
  }
}

export class SettleSystemBadDebtCall extends ethereum.Call {
  get inputs(): SettleSystemBadDebtCall__Inputs {
    return new SettleSystemBadDebtCall__Inputs(this);
  }

  get outputs(): SettleSystemBadDebtCall__Outputs {
    return new SettleSystemBadDebtCall__Outputs(this);
  }
}

export class SettleSystemBadDebtCall__Inputs {
  _call: SettleSystemBadDebtCall;

  constructor(call: SettleSystemBadDebtCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SettleSystemBadDebtCall__Outputs {
  _call: SettleSystemBadDebtCall;

  constructor(call: SettleSystemBadDebtCall) {
    this._call = call;
  }
}

export class UncageCall extends ethereum.Call {
  get inputs(): UncageCall__Inputs {
    return new UncageCall__Inputs(this);
  }

  get outputs(): UncageCall__Outputs {
    return new UncageCall__Outputs(this);
  }
}

export class UncageCall__Inputs {
  _call: UncageCall;

  constructor(call: UncageCall) {
    this._call = call;
  }
}

export class UncageCall__Outputs {
  _call: UncageCall;

  constructor(call: UncageCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WhitelistCall extends ethereum.Call {
  get inputs(): WhitelistCall__Inputs {
    return new WhitelistCall__Inputs(this);
  }

  get outputs(): WhitelistCall__Outputs {
    return new WhitelistCall__Outputs(this);
  }
}

export class WhitelistCall__Inputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }

  get toBeWhitelistedAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistCall__Outputs {
  _call: WhitelistCall;

  constructor(call: WhitelistCall) {
    this._call = call;
  }
}
