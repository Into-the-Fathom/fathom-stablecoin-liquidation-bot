// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogAllowManagePosition extends ethereum.Event {
  get params(): LogAllowManagePosition__Params {
    return new LogAllowManagePosition__Params(this);
  }
}

export class LogAllowManagePosition__Params {
  _event: LogAllowManagePosition;

  constructor(event: LogAllowManagePosition) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _positionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _user(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _ok(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LogAllowMigratePosition extends ethereum.Event {
  get params(): LogAllowMigratePosition__Params {
    return new LogAllowMigratePosition__Params(this);
  }
}

export class LogAllowMigratePosition__Params {
  _event: LogAllowMigratePosition;

  constructor(event: LogAllowMigratePosition) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _ok(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogExportPosition extends ethereum.Event {
  get params(): LogExportPosition__Params {
    return new LogExportPosition__Params(this);
  }
}

export class LogExportPosition__Params {
  _event: LogExportPosition;

  constructor(event: LogExportPosition) {
    this._event = event;
  }

  get _positionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _source(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _destination(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _lockedCollateral(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LogImportPosition extends ethereum.Event {
  get params(): LogImportPosition__Params {
    return new LogImportPosition__Params(this);
  }
}

export class LogImportPosition__Params {
  _event: LogImportPosition;

  constructor(event: LogImportPosition) {
    this._event = event;
  }

  get _positionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _source(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _destination(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _lockedCollateral(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LogMovePosition extends ethereum.Event {
  get params(): LogMovePosition__Params {
    return new LogMovePosition__Params(this);
  }
}

export class LogMovePosition__Params {
  _event: LogMovePosition;

  constructor(event: LogMovePosition) {
    this._event = event;
  }

  get _sourceId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _destinationId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _lockedCollateral(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LogNewPosition extends ethereum.Event {
  get params(): LogNewPosition__Params {
    return new LogNewPosition__Params(this);
  }
}

export class LogNewPosition__Params {
  _event: LogNewPosition;

  constructor(event: LogNewPosition) {
    this._event = event;
  }

  get _usr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _own(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _positionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PositionManager__listResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPrev(): BigInt {
    return this.value0;
  }

  getNext(): BigInt {
    return this.value1;
  }
}

export class PositionManager extends ethereum.SmartContract {
  static bind(address: Address): PositionManager {
    return new PositionManager("PositionManager", address);
  }

  bookKeeper(): Address {
    let result = super.call("bookKeeper", "bookKeeper():(address)", []);

    return result[0].toAddress();
  }

  try_bookKeeper(): ethereum.CallResult<Address> {
    let result = super.tryCall("bookKeeper", "bookKeeper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateralPools(param0: BigInt): Bytes {
    let result = super.call(
      "collateralPools",
      "collateralPools(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_collateralPools(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "collateralPools",
      "collateralPools(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  lastPositionId(): BigInt {
    let result = super.call("lastPositionId", "lastPositionId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastPositionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastPositionId",
      "lastPositionId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  list(param0: BigInt): PositionManager__listResult {
    let result = super.call("list", "list(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new PositionManager__listResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_list(param0: BigInt): ethereum.CallResult<PositionManager__listResult> {
    let result = super.tryCall("list", "list(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PositionManager__listResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  mapPositionHandlerToOwner(param0: Address): Address {
    let result = super.call(
      "mapPositionHandlerToOwner",
      "mapPositionHandlerToOwner(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_mapPositionHandlerToOwner(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mapPositionHandlerToOwner",
      "mapPositionHandlerToOwner(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  migrationWhitelist(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "migrationWhitelist",
      "migrationWhitelist(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_migrationWhitelist(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "migrationWhitelist",
      "migrationWhitelist(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  open(_collateralPoolId: Bytes, _user: Address): BigInt {
    let result = super.call("open", "open(bytes32,address):(uint256)", [
      ethereum.Value.fromFixedBytes(_collateralPoolId),
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBigInt();
  }

  try_open(
    _collateralPoolId: Bytes,
    _user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall("open", "open(bytes32,address):(uint256)", [
      ethereum.Value.fromFixedBytes(_collateralPoolId),
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerFirstPositionId(param0: Address): BigInt {
    let result = super.call(
      "ownerFirstPositionId",
      "ownerFirstPositionId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_ownerFirstPositionId(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerFirstPositionId",
      "ownerFirstPositionId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerLastPositionId(param0: Address): BigInt {
    let result = super.call(
      "ownerLastPositionId",
      "ownerLastPositionId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_ownerLastPositionId(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerLastPositionId",
      "ownerLastPositionId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerPositionCount(param0: Address): BigInt {
    let result = super.call(
      "ownerPositionCount",
      "ownerPositionCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_ownerPositionCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerPositionCount",
      "ownerPositionCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerWhitelist(param0: Address, param1: BigInt, param2: Address): BigInt {
    let result = super.call(
      "ownerWhitelist",
      "ownerWhitelist(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_ownerWhitelist(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerWhitelist",
      "ownerWhitelist(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owners(param0: BigInt): Address {
    let result = super.call("owners", "owners(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_owners(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("owners", "owners(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  positions(param0: BigInt): Address {
    let result = super.call("positions", "positions(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_positions(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("positions", "positions(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  showStopper(): Address {
    let result = super.call("showStopper", "showStopper():(address)", []);

    return result[0].toAddress();
  }

  try_showStopper(): ethereum.CallResult<Address> {
    let result = super.tryCall("showStopper", "showStopper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _bookKeeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _showStopper(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AdjustPositionCall extends ethereum.Call {
  get inputs(): AdjustPositionCall__Inputs {
    return new AdjustPositionCall__Inputs(this);
  }

  get outputs(): AdjustPositionCall__Outputs {
    return new AdjustPositionCall__Outputs(this);
  }
}

export class AdjustPositionCall__Inputs {
  _call: AdjustPositionCall;

  constructor(call: AdjustPositionCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _debtShare(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _adapter(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AdjustPositionCall__Outputs {
  _call: AdjustPositionCall;

  constructor(call: AdjustPositionCall) {
    this._call = call;
  }
}

export class AllowManagePositionCall extends ethereum.Call {
  get inputs(): AllowManagePositionCall__Inputs {
    return new AllowManagePositionCall__Inputs(this);
  }

  get outputs(): AllowManagePositionCall__Outputs {
    return new AllowManagePositionCall__Outputs(this);
  }
}

export class AllowManagePositionCall__Inputs {
  _call: AllowManagePositionCall;

  constructor(call: AllowManagePositionCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ok(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AllowManagePositionCall__Outputs {
  _call: AllowManagePositionCall;

  constructor(call: AllowManagePositionCall) {
    this._call = call;
  }
}

export class AllowMigratePositionCall extends ethereum.Call {
  get inputs(): AllowMigratePositionCall__Inputs {
    return new AllowMigratePositionCall__Inputs(this);
  }

  get outputs(): AllowMigratePositionCall__Outputs {
    return new AllowMigratePositionCall__Outputs(this);
  }
}

export class AllowMigratePositionCall__Inputs {
  _call: AllowMigratePositionCall;

  constructor(call: AllowMigratePositionCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ok(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AllowMigratePositionCall__Outputs {
  _call: AllowMigratePositionCall;

  constructor(call: AllowMigratePositionCall) {
    this._call = call;
  }
}

export class ExportPositionCall extends ethereum.Call {
  get inputs(): ExportPositionCall__Inputs {
    return new ExportPositionCall__Inputs(this);
  }

  get outputs(): ExportPositionCall__Outputs {
    return new ExportPositionCall__Outputs(this);
  }
}

export class ExportPositionCall__Inputs {
  _call: ExportPositionCall;

  constructor(call: ExportPositionCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExportPositionCall__Outputs {
  _call: ExportPositionCall;

  constructor(call: ExportPositionCall) {
    this._call = call;
  }
}

export class GiveCall extends ethereum.Call {
  get inputs(): GiveCall__Inputs {
    return new GiveCall__Inputs(this);
  }

  get outputs(): GiveCall__Outputs {
    return new GiveCall__Outputs(this);
  }
}

export class GiveCall__Inputs {
  _call: GiveCall;

  constructor(call: GiveCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GiveCall__Outputs {
  _call: GiveCall;

  constructor(call: GiveCall) {
    this._call = call;
  }
}

export class ImportPositionCall extends ethereum.Call {
  get inputs(): ImportPositionCall__Inputs {
    return new ImportPositionCall__Inputs(this);
  }

  get outputs(): ImportPositionCall__Outputs {
    return new ImportPositionCall__Outputs(this);
  }
}

export class ImportPositionCall__Inputs {
  _call: ImportPositionCall;

  constructor(call: ImportPositionCall) {
    this._call = call;
  }

  get _source(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _positionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ImportPositionCall__Outputs {
  _call: ImportPositionCall;

  constructor(call: ImportPositionCall) {
    this._call = call;
  }
}

export class MoveCollateralCall extends ethereum.Call {
  get inputs(): MoveCollateralCall__Inputs {
    return new MoveCollateralCall__Inputs(this);
  }

  get outputs(): MoveCollateralCall__Outputs {
    return new MoveCollateralCall__Outputs(this);
  }
}

export class MoveCollateralCall__Inputs {
  _call: MoveCollateralCall;

  constructor(call: MoveCollateralCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _wad(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _adapter(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class MoveCollateralCall__Outputs {
  _call: MoveCollateralCall;

  constructor(call: MoveCollateralCall) {
    this._call = call;
  }
}

export class MoveCollateral1Call extends ethereum.Call {
  get inputs(): MoveCollateral1Call__Inputs {
    return new MoveCollateral1Call__Inputs(this);
  }

  get outputs(): MoveCollateral1Call__Outputs {
    return new MoveCollateral1Call__Outputs(this);
  }
}

export class MoveCollateral1Call__Inputs {
  _call: MoveCollateral1Call;

  constructor(call: MoveCollateral1Call) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _positionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _destination(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _wad(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _adapter(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class MoveCollateral1Call__Outputs {
  _call: MoveCollateral1Call;

  constructor(call: MoveCollateral1Call) {
    this._call = call;
  }
}

export class MovePositionCall extends ethereum.Call {
  get inputs(): MovePositionCall__Inputs {
    return new MovePositionCall__Inputs(this);
  }

  get outputs(): MovePositionCall__Outputs {
    return new MovePositionCall__Outputs(this);
  }
}

export class MovePositionCall__Inputs {
  _call: MovePositionCall;

  constructor(call: MovePositionCall) {
    this._call = call;
  }

  get _sourceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _destinationId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MovePositionCall__Outputs {
  _call: MovePositionCall;

  constructor(call: MovePositionCall) {
    this._call = call;
  }
}

export class MoveStablecoinCall extends ethereum.Call {
  get inputs(): MoveStablecoinCall__Inputs {
    return new MoveStablecoinCall__Inputs(this);
  }

  get outputs(): MoveStablecoinCall__Outputs {
    return new MoveStablecoinCall__Outputs(this);
  }
}

export class MoveStablecoinCall__Inputs {
  _call: MoveStablecoinCall;

  constructor(call: MoveStablecoinCall) {
    this._call = call;
  }

  get _positionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _rad(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MoveStablecoinCall__Outputs {
  _call: MoveStablecoinCall;

  constructor(call: MoveStablecoinCall) {
    this._call = call;
  }
}

export class OpenCall extends ethereum.Call {
  get inputs(): OpenCall__Inputs {
    return new OpenCall__Inputs(this);
  }

  get outputs(): OpenCall__Outputs {
    return new OpenCall__Outputs(this);
  }
}

export class OpenCall__Inputs {
  _call: OpenCall;

  constructor(call: OpenCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class OpenCall__Outputs {
  _call: OpenCall;

  constructor(call: OpenCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RedeemLockedCollateralCall extends ethereum.Call {
  get inputs(): RedeemLockedCollateralCall__Inputs {
    return new RedeemLockedCollateralCall__Inputs(this);
  }

  get outputs(): RedeemLockedCollateralCall__Outputs {
    return new RedeemLockedCollateralCall__Outputs(this);
  }
}

export class RedeemLockedCollateralCall__Inputs {
  _call: RedeemLockedCollateralCall;

  constructor(call: RedeemLockedCollateralCall) {
    this._call = call;
  }

  get _posId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _adapter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _collateralReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RedeemLockedCollateralCall__Outputs {
  _call: RedeemLockedCollateralCall;

  constructor(call: RedeemLockedCollateralCall) {
    this._call = call;
  }
}
