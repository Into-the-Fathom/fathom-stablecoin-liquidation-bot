// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LogCage extends ethereum.Event {
  get params(): LogCage__Params {
    return new LogCage__Params(this);
  }
}

export class LogCage__Params {
  _event: LogCage;

  constructor(event: LogCage) {
    this._event = event;
  }
}

export class LogSetPrice extends ethereum.Event {
  get params(): LogSetPrice__Params {
    return new LogSetPrice__Params(this);
  }
}

export class LogSetPrice__Params {
  _event: LogSetPrice;

  constructor(event: LogSetPrice) {
    this._event = event;
  }

  get _poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _rawPrice(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _priceWithSafetyMargin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogSetStableCoinReferencePrice extends ethereum.Event {
  get params(): LogSetStableCoinReferencePrice__Params {
    return new LogSetStableCoinReferencePrice__Params(this);
  }
}

export class LogSetStableCoinReferencePrice__Params {
  _event: LogSetStableCoinReferencePrice;

  constructor(event: LogSetStableCoinReferencePrice) {
    this._event = event;
  }

  get _caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _data(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogUncage extends ethereum.Event {
  get params(): LogUncage__Params {
    return new LogUncage__Params(this);
  }
}

export class LogUncage__Params {
  _event: LogUncage;

  constructor(event: LogUncage) {
    this._event = event;
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PriceOracle extends ethereum.SmartContract {
  static bind(address: Address): PriceOracle {
    return new PriceOracle("PriceOracle", address);
  }

  bookKeeper(): Address {
    let result = super.call("bookKeeper", "bookKeeper():(address)", []);

    return result[0].toAddress();
  }

  try_bookKeeper(): ethereum.CallResult<Address> {
    let result = super.tryCall("bookKeeper", "bookKeeper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  live(): BigInt {
    let result = super.call("live", "live():(uint256)", []);

    return result[0].toBigInt();
  }

  try_live(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("live", "live():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  stableCoinReferencePrice(): BigInt {
    let result = super.call(
      "stableCoinReferencePrice",
      "stableCoinReferencePrice():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_stableCoinReferencePrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "stableCoinReferencePrice",
      "stableCoinReferencePrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _bookKeeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetStableCoinReferencePriceCall extends ethereum.Call {
  get inputs(): SetStableCoinReferencePriceCall__Inputs {
    return new SetStableCoinReferencePriceCall__Inputs(this);
  }

  get outputs(): SetStableCoinReferencePriceCall__Outputs {
    return new SetStableCoinReferencePriceCall__Outputs(this);
  }
}

export class SetStableCoinReferencePriceCall__Inputs {
  _call: SetStableCoinReferencePriceCall;

  constructor(call: SetStableCoinReferencePriceCall) {
    this._call = call;
  }

  get _data(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStableCoinReferencePriceCall__Outputs {
  _call: SetStableCoinReferencePriceCall;

  constructor(call: SetStableCoinReferencePriceCall) {
    this._call = call;
  }
}

export class SetPriceCall extends ethereum.Call {
  get inputs(): SetPriceCall__Inputs {
    return new SetPriceCall__Inputs(this);
  }

  get outputs(): SetPriceCall__Outputs {
    return new SetPriceCall__Outputs(this);
  }
}

export class SetPriceCall__Inputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }

  get _collateralPoolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetPriceCall__Outputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }
}

export class CageCall extends ethereum.Call {
  get inputs(): CageCall__Inputs {
    return new CageCall__Inputs(this);
  }

  get outputs(): CageCall__Outputs {
    return new CageCall__Outputs(this);
  }
}

export class CageCall__Inputs {
  _call: CageCall;

  constructor(call: CageCall) {
    this._call = call;
  }
}

export class CageCall__Outputs {
  _call: CageCall;

  constructor(call: CageCall) {
    this._call = call;
  }
}

export class UncageCall extends ethereum.Call {
  get inputs(): UncageCall__Inputs {
    return new UncageCall__Inputs(this);
  }

  get outputs(): UncageCall__Outputs {
    return new UncageCall__Outputs(this);
  }
}

export class UncageCall__Inputs {
  _call: UncageCall;

  constructor(call: UncageCall) {
    this._call = call;
  }
}

export class UncageCall__Outputs {
  _call: UncageCall;

  constructor(call: UncageCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
